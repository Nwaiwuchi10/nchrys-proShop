{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DJ NCHRIS\\\\Desktop\\\\proshop\\\\proshop-front-end\\\\src\\\\Screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../Components/Message\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    location,\n    history\n  } = _ref;\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log(cartItems);\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), cartItems.lenght === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"Your cart is empty\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen; //   const removeFromCartHandler = (id) => {\n//     console.log(\"remove\");\n//     //  dispatch(removeFromCart(id));\n//   };\n//   // const checkoutHandler = () => {\n//   //   history.push(\"/login? redirect =shipping\");\n//   return (\n//     <Row>\n//       <Col md={8}>\n//         <h1>Shopping Cart</h1>\n//         {cartItems.length === 0 ? (\n//           <Message>\n//             Your cart is empty <Link to=\"/\">Go Back</Link>{\" \"}\n//           </Message>\n//         ) : (\n//           <ListGroup variant=\"flush\">\n//             {cartItems.map((item) => (\n//               <ListGroup.Item key={item.product}>\n//                 <Row>\n//                   <Col md={2}>\n//                     <Image src={item.image} alt={item.name} fluid rounded />\n//                   </Col>\n//                   <Col md={3}>\n//                     <Link to={`/product/${item.product}`}>{item.name}</Link>\n//                   </Col>\n//                   <Col md={2}>${item.price}</Col>\n//                   <Col md={2}>\n//                     <Form.Control\n//                       as=\"select\"\n//                       value={item.qty}\n//                       onChange={(e) =>\n//                         dispatch(\n//                           addToCart(item.product, Number(e.target.value))\n//                         )\n//                       }\n//                     >\n//                       {[...Array(item.countInStock).keys()].map((x) => (\n//                         <option key={x + 1} value={x + 1}>\n//                           {x + 1}\n//                         </option>\n//                       ))}\n//                     </Form.Control>\n//                   </Col>\n//                   <Col md={2}>\n//                     <Button\n//                       type=\"button\"\n//                       variant=\"light\"\n//                       onClick={() => removeFromCartHandler(item.product)}\n//                     >\n//                       <i className=\"fas fa-trash\"></i>\n//                     </Button>\n//                   </Col>\n//                 </Row>\n//               </ListGroup.Item>\n//             ))}\n//           </ListGroup>\n//         )}\n//       </Col>\n//       <Col md={2}></Col>\n//       <Col md={2}></Col>\n//     </Row>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/DJ NCHRIS/Desktop/proshop/proshop-front-end/src/Screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Message","Link","Row","Col","ListGroup","Image","Form","Button","Card","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","console","log","lenght"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,IAPF,QAQO,iBARP;AASA,SAASC,SAAT,QAA0B,wBAA1B;;;AAEA,MAAMC,UAAU,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAiC;AACnD,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AAEA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAEA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AAEA,QAAMwB,IAAI,GAAGvB,WAAW,CAAEwB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,SAAJ,EAAe;AACbO,MAAAA,QAAQ,CAACZ,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACI,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CAJM,CAAT;AAMA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGO,SAAS,CAACG,MAAV,KAAqB,CAArB,gBACC,QAAC,OAAD;AAAA,sDACoB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjCD;;GAAMjB,U;UAKaZ,W,EAEJC,W;;;KAPTW,U;AAmCN,eAAeA,UAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.lenght === 0 ? (\r\n          <Message>\r\n            Your cart is empty<Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\"></ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={2}></Col>\r\n      <Col md={2}></Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n\r\n//   const removeFromCartHandler = (id) => {\r\n//     console.log(\"remove\");\r\n//     //  dispatch(removeFromCart(id));\r\n//   };\r\n\r\n//   // const checkoutHandler = () => {\r\n//   //   history.push(\"/login? redirect =shipping\");\r\n//   return (\r\n//     <Row>\r\n//       <Col md={8}>\r\n//         <h1>Shopping Cart</h1>\r\n//         {cartItems.length === 0 ? (\r\n//           <Message>\r\n//             Your cart is empty <Link to=\"/\">Go Back</Link>{\" \"}\r\n//           </Message>\r\n//         ) : (\r\n//           <ListGroup variant=\"flush\">\r\n//             {cartItems.map((item) => (\r\n//               <ListGroup.Item key={item.product}>\r\n//                 <Row>\r\n//                   <Col md={2}>\r\n//                     <Image src={item.image} alt={item.name} fluid rounded />\r\n//                   </Col>\r\n//                   <Col md={3}>\r\n//                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n//                   </Col>\r\n//                   <Col md={2}>${item.price}</Col>\r\n//                   <Col md={2}>\r\n//                     <Form.Control\r\n//                       as=\"select\"\r\n//                       value={item.qty}\r\n//                       onChange={(e) =>\r\n//                         dispatch(\r\n//                           addToCart(item.product, Number(e.target.value))\r\n//                         )\r\n//                       }\r\n//                     >\r\n//                       {[...Array(item.countInStock).keys()].map((x) => (\r\n//                         <option key={x + 1} value={x + 1}>\r\n//                           {x + 1}\r\n//                         </option>\r\n//                       ))}\r\n//                     </Form.Control>\r\n//                   </Col>\r\n//                   <Col md={2}>\r\n//                     <Button\r\n//                       type=\"button\"\r\n//                       variant=\"light\"\r\n//                       onClick={() => removeFromCartHandler(item.product)}\r\n//                     >\r\n//                       <i className=\"fas fa-trash\"></i>\r\n//                     </Button>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//           </ListGroup>\r\n//         )}\r\n//       </Col>\r\n//       <Col md={2}></Col>\r\n//       <Col md={2}></Col>\r\n//     </Row>\r\n//   );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}