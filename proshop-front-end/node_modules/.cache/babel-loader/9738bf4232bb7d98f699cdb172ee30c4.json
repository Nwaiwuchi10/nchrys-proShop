{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DJ NCHRIS\\\\Desktop\\\\proshop\\\\proshop-front-end\\\\src\\\\Screens\\\\ProductEditScreen.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hellooo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ProductEditScreen;\nexport default ProductEditScreen; // import axios from \"axios\";\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Form, Button } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../Components/Message\";\n// import Loader from \"../Components/Loader\";\n// import { listProductDetails, updateProduct } from \"../actions/productActions\";\n// import FormContainer from \"../Components/FormContainer\";\n// import { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n// const ProductEditScreen = ({ match, history }) => {\n//   const productId = match.params.id;\n//   const [name, setName] = useState(\"\");\n//   const [price, setPrice] = useState(0);\n//   const [image, setImage] = useState(\"\");\n//   const [brand, setBrand] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [countInStock, setCountInStock] = useState(0);\n//   const [description, setDescription] = useState(\"\");\n//   const [uploading, setUploading] = useState(false);\n//   const dispatch = useDispatch();\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   const productUpdate = useSelector((state) => state.productUpdate);\n//   const {\n//     loading: loadingUpdate,\n//     error: errorUpdate,\n//     success: successUpdate,\n//   } = productUpdate;\n//   useEffect(() => {\n//     if (successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET });\n//       history.push(\"/admin/productlist\");\n//     } else {\n//       if (!product.name || product._id !== productId) {\n//         dispatch(listProductDetails(productId));\n//       } else {\n//         setName(product.name);\n//         setPrice(product.price);\n//         setImage(product.image);\n//         setBrand(product.brand);\n//         setCategory(product.category);\n//         setCountInStock(product.countInStock);\n//         setDescription(product.description);\n//       }\n//     }\n//   }, [dispatch, history, productId, product, successUpdate]);\n//   const uploadFileHandler = async (e) => {\n//     const file = e.target.files[0];\n//     const formData = new FormData();\n//     formData.append(\"image\", file);\n//     setUploading(true);\n//     try {\n//       const config = {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       };\n//       const { data } = await axios.post(\"/api/upload\", formData, config);\n//       setImage(data);\n//       setUploading(false);\n//     } catch (error) {\n//       console.error(error);\n//       setUploading(false);\n//     }\n//   };\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     // UPDATE PRODUCT\n//     dispatch(\n//       updateProduct({\n//         _id: productId,\n//         name,\n//         price,\n//         image,\n//         brand,\n//         category,\n//         description,\n//         countInStock,\n//       })\n//     );\n//   };\n//   return (\n//     <>\n//       <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n//         Go Back\n//       </Link>\n//       <FormContainer>\n//         <h1>Edit Product</h1>\n//         {loadingUpdate && <Loader />}\n//         {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n//         {loading ? (\n//           <Loader />\n//         ) : error ? (\n//           <Message variant=\"danger\">{error}</Message>\n//         ) : (\n//           <Form onSubmit={submitHandler}>\n//             <Form.Group controlId=\"name\">\n//               <Form.Label>Name</Form.Label>\n//               <Form.Control\n//                 type=\"name\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <Form.Group controlId=\"price\">\n//               <Form.Label>Price</Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Enter price\"\n//                 value={price}\n//                 onChange={(e) => setPrice(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <Form.Group controlId=\"image\">\n//               <Form.Label>Image</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter image url\"\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></Form.Control>\n//               <Form.File\n//                 id=\"image-file\"\n//                 label=\"Choose file\"\n//                 custom\n//                 onChange={uploadFileHandler}\n//               ></Form.File>\n//               {uploading && <Loader />}\n//             </Form.Group>\n//             <Form.Group controlId=\"brand\">\n//               <Form.Label>Brand</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter brand\"\n//                 value={brand}\n//                 onChange={(e) => setBrand(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <Form.Group controlId=\"category\">\n//               <Form.Label>Category</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter category\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <Form.Group controlId=\"countInStock\">\n//               <Form.Label>Count In Stock</Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Enter countInStock\"\n//                 value={countInStock}\n//                 onChange={(e) => setCountInStock(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <Form.Group controlId=\"decription\">\n//               <Form.Label>Description</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter description\"\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <Button type=\"submit\" variant=\"primary\">\n//               Update\n//             </Button>\n//           </Form>\n//         )}\n//       </FormContainer>\n//     </>\n//   );\n// };\n// export default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/Users/DJ NCHRIS/Desktop/proshop/proshop-front-end/src/Screens/ProductEditScreen.js"],"names":["React","ProductEditScreen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,iB;AAIN,eAAeA,iBAAfsourcesContent":["import React from \"react\";\r\n\r\nconst ProductEditScreen = () => {\r\n  return <div>hellooo</div>;\r\n};\r\n\r\nexport default ProductEditScreen;\r\n\r\n// import axios from \"axios\";\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Form, Button } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../Components/Message\";\r\n// import Loader from \"../Components/Loader\";\r\n// import { listProductDetails, updateProduct } from \"../actions/productActions\";\r\n// import FormContainer from \"../Components/FormContainer\";\r\n// import { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\n// const ProductEditScreen = ({ match, history }) => {\r\n//   const productId = match.params.id;\r\n//   const [name, setName] = useState(\"\");\r\n//   const [price, setPrice] = useState(0);\r\n\r\n//   const [image, setImage] = useState(\"\");\r\n//   const [brand, setBrand] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [countInStock, setCountInStock] = useState(0);\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [uploading, setUploading] = useState(false);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   const productUpdate = useSelector((state) => state.productUpdate);\r\n\r\n//   const {\r\n//     loading: loadingUpdate,\r\n//     error: errorUpdate,\r\n//     success: successUpdate,\r\n//   } = productUpdate;\r\n\r\n//   useEffect(() => {\r\n//     if (successUpdate) {\r\n//       dispatch({ type: PRODUCT_UPDATE_RESET });\r\n//       history.push(\"/admin/productlist\");\r\n//     } else {\r\n//       if (!product.name || product._id !== productId) {\r\n//         dispatch(listProductDetails(productId));\r\n//       } else {\r\n//         setName(product.name);\r\n//         setPrice(product.price);\r\n//         setImage(product.image);\r\n//         setBrand(product.brand);\r\n//         setCategory(product.category);\r\n//         setCountInStock(product.countInStock);\r\n//         setDescription(product.description);\r\n//       }\r\n//     }\r\n//   }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n//   const uploadFileHandler = async (e) => {\r\n//     const file = e.target.files[0];\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", file);\r\n//     setUploading(true);\r\n\r\n//     try {\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       };\r\n//       const { data } = await axios.post(\"/api/upload\", formData, config);\r\n//       setImage(data);\r\n//       setUploading(false);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setUploading(false);\r\n//     }\r\n//   };\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     // UPDATE PRODUCT\r\n//     dispatch(\r\n//       updateProduct({\r\n//         _id: productId,\r\n//         name,\r\n//         price,\r\n//         image,\r\n//         brand,\r\n//         category,\r\n//         description,\r\n//         countInStock,\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n//         Go Back\r\n//       </Link>\r\n\r\n//       <FormContainer>\r\n//         <h1>Edit Product</h1>\r\n//         {loadingUpdate && <Loader />}\r\n//         {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n//         {loading ? (\r\n//           <Loader />\r\n//         ) : error ? (\r\n//           <Message variant=\"danger\">{error}</Message>\r\n//         ) : (\r\n//           <Form onSubmit={submitHandler}>\r\n//             <Form.Group controlId=\"name\">\r\n//               <Form.Label>Name</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"name\"\r\n//                 placeholder=\"Enter name\"\r\n//                 value={name}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group controlId=\"price\">\r\n//               <Form.Label>Price</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"number\"\r\n//                 placeholder=\"Enter price\"\r\n//                 value={price}\r\n//                 onChange={(e) => setPrice(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group controlId=\"image\">\r\n//               <Form.Label>Image</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter image url\"\r\n//                 value={image}\r\n//                 onChange={(e) => setImage(e.target.value)}\r\n//               ></Form.Control>\r\n//               <Form.File\r\n//                 id=\"image-file\"\r\n//                 label=\"Choose file\"\r\n//                 custom\r\n//                 onChange={uploadFileHandler}\r\n//               ></Form.File>\r\n//               {uploading && <Loader />}\r\n//             </Form.Group>\r\n//             <Form.Group controlId=\"brand\">\r\n//               <Form.Label>Brand</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter brand\"\r\n//                 value={brand}\r\n//                 onChange={(e) => setBrand(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group controlId=\"category\">\r\n//               <Form.Label>Category</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter category\"\r\n//                 value={category}\r\n//                 onChange={(e) => setCategory(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group controlId=\"countInStock\">\r\n//               <Form.Label>Count In Stock</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"number\"\r\n//                 placeholder=\"Enter countInStock\"\r\n//                 value={countInStock}\r\n//                 onChange={(e) => setCountInStock(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group controlId=\"decription\">\r\n//               <Form.Label>Description</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter description\"\r\n//                 value={description}\r\n//                 onChange={(e) => setDescription(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Button type=\"submit\" variant=\"primary\">\r\n//               Update\r\n//             </Button>\r\n//           </Form>\r\n//         )}\r\n//       </FormContainer>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}