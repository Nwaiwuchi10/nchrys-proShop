{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DJ NCHRIS\\\\Desktop\\\\proshop\\\\proshop-front-end\\\\src\\\\Screens\\\\OrderScreen.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Order ooooo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = OrderScreen;\nexport default OrderScreen; // import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../Components/Message\";\n// import Loader from \"../Components/Loader\";\n// import { getOrderDetails } from \"../actions/orderActions\";\n// // import { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\n// // import { USER_DETAILS_RESET } from \"../constants/userConstants\";\n// const OrderScreen = ({ match }) => {\n//   const orderId = match.params.id;\n//   const dispatch = useDispatch();\n//   const orderDetails = useSelector((state) => state.orderDetails);\n//   const { order, loading, error } = orderDetails;\n//   useEffect(\n//     () => {\n//       dispatch(getOrderDetails(orderId));\n//     },\n//     // eslint-disable-next-line\n//     []\n//   );\n//   return loading ? (\n//     <Loader />\n//   ) : error ? (\n//     <Message variant=\"danger\">{error}</Message>\n//   ) : (\n//     <>\n//       <h1>Order {order._id}</h1>\n//       <Row>\n//         <Col md={8}>\n//           <ListGroup variant=\"flush\">\n//             <ListGroup.Item>\n//               <h2>Shipping</h2>\n//               <p>\n//                 <strong>Address:</strong>\n//                 {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n//                 {order.shippingAddress.postalCode},{\" \"}\n//                 {order.shippingAddress.country}\n//               </p>\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <h2>Payment Method</h2>\n//               <strong>Method: </strong>\n//               {order.paymentMethod}\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <h2>Order Items</h2>\n//               {order.orderItems.length === 0 ? (\n//                 <Message>Order is empty</Message>\n//               ) : (\n//                 <ListGroup variant=\"flush\">\n//                   {order.orderItems.map((item, index) => (\n//                     <ListGroup.Item key={index}>\n//                       <Row>\n//                         <Col md={1}>\n//                           <Image\n//                             src={item.image}\n//                             alt={item.name}\n//                             fluid\n//                             rounded\n//                           />\n//                         </Col>\n//                         <Col>\n//                           <Link to={`/product/${item.product}`}>\n//                             {item.name}\n//                           </Link>\n//                         </Col>\n//                         <Col md={4}>\n//                           {item.qty} x ${item.price} = ${item.qty * item.price}\n//                         </Col>\n//                       </Row>\n//                     </ListGroup.Item>\n//                   ))}\n//                 </ListGroup>\n//               )}\n//             </ListGroup.Item>\n//           </ListGroup>\n//         </Col>\n//         <Col md={4}>\n//           <Card>\n//             <ListGroup variant=\"flush\">\n//               <ListGroup.Item>\n//                 <h2>Order Summary</h2>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Items</Col>\n//                   <Col>${order.itemsPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Shipping</Col>\n//                   <Col>${order.shippingPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Tax</Col>\n//                   <Col>${order.taxPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Total</Col>\n//                   <Col>${order.totalPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//             </ListGroup>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </>\n//   );\n// };\n// export default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/DJ NCHRIS/Desktop/proshop/proshop-front-end/src/Screens/OrderScreen.js"],"names":["React","OrderScreen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,W;AAIN,eAAeA,WAAfsourcesContent":["import React from \"react\";\r\n\r\nconst OrderScreen = () => {\r\n  return <div>Order ooooo</div>;\r\n};\r\n\r\nexport default OrderScreen;\r\n\r\n// import React, { useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../Components/Message\";\r\n// import Loader from \"../Components/Loader\";\r\n\r\n// import { getOrderDetails } from \"../actions/orderActions\";\r\n// // import { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n// // import { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\n// const OrderScreen = ({ match }) => {\r\n//   const orderId = match.params.id;\r\n//   const dispatch = useDispatch();\r\n\r\n//   const orderDetails = useSelector((state) => state.orderDetails);\r\n//   const { order, loading, error } = orderDetails;\r\n\r\n//   useEffect(\r\n//     () => {\r\n//       dispatch(getOrderDetails(orderId));\r\n//     },\r\n//     // eslint-disable-next-line\r\n//     []\r\n//   );\r\n\r\n//   return loading ? (\r\n//     <Loader />\r\n//   ) : error ? (\r\n//     <Message variant=\"danger\">{error}</Message>\r\n//   ) : (\r\n//     <>\r\n//       <h1>Order {order._id}</h1>\r\n//       <Row>\r\n//         <Col md={8}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>Shipping</h2>\r\n//               <p>\r\n//                 <strong>Address:</strong>\r\n//                 {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n//                 {order.shippingAddress.postalCode},{\" \"}\r\n//                 {order.shippingAddress.country}\r\n//               </p>\r\n//             </ListGroup.Item>\r\n\r\n//             <ListGroup.Item>\r\n//               <h2>Payment Method</h2>\r\n//               <strong>Method: </strong>\r\n//               {order.paymentMethod}\r\n//             </ListGroup.Item>\r\n\r\n//             <ListGroup.Item>\r\n//               <h2>Order Items</h2>\r\n//               {order.orderItems.length === 0 ? (\r\n//                 <Message>Order is empty</Message>\r\n//               ) : (\r\n//                 <ListGroup variant=\"flush\">\r\n//                   {order.orderItems.map((item, index) => (\r\n//                     <ListGroup.Item key={index}>\r\n//                       <Row>\r\n//                         <Col md={1}>\r\n//                           <Image\r\n//                             src={item.image}\r\n//                             alt={item.name}\r\n//                             fluid\r\n//                             rounded\r\n//                           />\r\n//                         </Col>\r\n//                         <Col>\r\n//                           <Link to={`/product/${item.product}`}>\r\n//                             {item.name}\r\n//                           </Link>\r\n//                         </Col>\r\n//                         <Col md={4}>\r\n//                           {item.qty} x ${item.price} = ${item.qty * item.price}\r\n//                         </Col>\r\n//                       </Row>\r\n//                     </ListGroup.Item>\r\n//                   ))}\r\n//                 </ListGroup>\r\n//               )}\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n//         <Col md={4}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>Order Summary</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Items</Col>\r\n//                   <Col>${order.itemsPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Shipping</Col>\r\n//                   <Col>${order.shippingPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Tax</Col>\r\n//                   <Col>${order.taxPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Total</Col>\r\n//                   <Col>${order.totalPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default OrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}